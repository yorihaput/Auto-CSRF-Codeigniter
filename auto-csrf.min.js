/*! 
 * auto-csrf.min.js
 * version: 2.0.2
 * author: Yori Hadi Putra <yori.haput@gmail.com>
 * license: MIT
 * https://github.com/yorihaput/Auto-CSRF-Codeigniter
 */
((e, t, a) => { "use strict"; void 0 !== e.csrf_name ? (null != e.csrf_value && localStorage.setItem(e.csrf_name, e.csrf_value), void 0 !== e.jQuery && (!function (e, t, a, n) { a(function (a) { "post" === a.type.toLowerCase() && (t = localStorage.getItem(e), 0 == a.processData && "FormData" == a.data.constructor.name ? a.data.append(e, t) : (a.data = a.data || "", a.data += a.data ? "&" : "", a.data += e + "=" + encodeURIComponent(t))) }) }(e.csrf_name, e.csrf_value, e.jQuery.ajaxPrefilter), e.jQuery(document).ajaxComplete(function (t, a, n) { localStorage.setItem(e.csrf_name, a.getResponseHeader("resp-hash")) })), function (e, t) { document.addEventListener("DOMContentLoaded", function (a) { for (let a of document.forms) a.addEventListener("submit", function (n) { if (t = localStorage.getItem(e), void 0 !== a[e]) a[e].value = t; else { let n = document.createElement("input"); n.setAttribute("name", e), n.setAttribute("type", "hidden"), n.setAttribute("value", t), a.appendChild(n) } }), a._submit = a.submit, a.submit = function () { this.dispatchEvent(new Event("submit")), this._submit() } }, !1); let a = window.fetch; window.fetch = ((n, o = {}) => { if (o.headers && o.headers["Content-Type"] && "application/json" == o.headers["Content-Type"] && o.method && "post" == o.method.toLowerCase()) try { let a = JSON.parse(o.body); a[e] = t, o.body = JSON.stringify(a) } catch (e) { console.error(e) } return a(n, o) }) }(e.csrf_name, e.csrf_value)) : console.error("CSRF_NAME variable undefined please define this variable first") })(this);